definitions:
  main.createLobbyRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  main.joinLobbyRequest:
    properties:
      nickname:
        type: string
    required:
    - nickname
    type: object
  main.rollDiceRequest:
    properties:
      DiceType:
        type: integer
      IsPrivateRoll:
        type: integer
      MemberID:
        type: string
      NumberOfRolls:
        type: integer
    required:
    - DiceType
    - IsPrivateRoll
    - MemberID
    - NumberOfRolls
    type: object
  models.ChatMessage:
    properties:
      message:
        type: string
      sender:
        type: string
      timestamp:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/lobbies:
    post:
      consumes:
      - application/json
      description: create a new lobby with the given name
      parameters:
      - description: Create Lobby
        in: body
        name: lobby
        required: true
        schema:
          $ref: '#/definitions/main.createLobbyRequest'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create a new lobby
      tags:
      - lobbies
  /api/lobbies/{id}/chathistory:
    get:
      consumes:
      - application/json
      description: Get the history of all chat messages of a specific lobby
      parameters:
      - description: Lobby ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ChatMessage'
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
      summary: Get the chat history of a lobby
      tags:
      - lobby
  /api/lobbies/{id}/members:
    get:
      consumes:
      - application/json
      description: get members of a specific lobby by ID
      parameters:
      - description: Lobby ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
      summary: Get members of a lobby
      tags:
      - member
    post:
      consumes:
      - application/json
      description: lets a user join a lobby
      parameters:
      - description: Lobby ID
        in: path
        name: id
        required: true
        type: string
      - description: Join Lobby
        in: body
        name: lobby
        required: true
        schema:
          $ref: '#/definitions/main.joinLobbyRequest'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Join an existing Lobby
      tags:
      - lobbies
  /api/lobbies/{id}/members/{id2}/messages:
    get:
      consumes:
      - application/json
      description: get all new chat messages for this specific member
      parameters:
      - description: Lobby ID
        in: path
        name: id
        required: true
        type: string
      - description: Member ID
        in: path
        name: id2
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ChatMessage'
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
      summary: get new messages
      tags:
      - member
  /api/lobbies/{id}/members/{id2}/updates:
    get:
      consumes:
      - application/json
      description: Get update instructions of a specific member
      parameters:
      - description: Lobby ID
        in: path
        name: id
        required: true
        type: string
      - description: Member ID
        in: path
        name: id2
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: integer
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
      summary: get member update instructions
      tags:
      - member
  /api/lobbies/{id}/name:
    get:
      consumes:
      - application/json
      description: return the name of the specified lobby
      parameters:
      - description: Lobby ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: get lobby name
      tags:
      - lobbies
  /api/lobbies/{id}/rolldice:
    post:
      consumes:
      - application/json
      description: roll dice and send back integer result in string form
      parameters:
      - description: Lobby ID
        in: path
        name: id
        required: true
        type: string
      - description: Roll Dice Request
        in: body
        name: lobby
        required: true
        schema:
          $ref: '#/definitions/main.rollDiceRequest'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Roll dice post request
      tags:
      - lobbies
swagger: "2.0"
