// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/lobbies": {
            "post": {
                "description": "create a new lobby with the given name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "lobbies"
                ],
                "summary": "Create a new lobby",
                "parameters": [
                    {
                        "description": "Create Lobby",
                        "name": "lobby",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.createLobbyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/lobbies/{id}/chathistory": {
            "get": {
                "description": "Get the history of all chat messages of a specific lobby",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lobby"
                ],
                "summary": "Get the chat history of a lobby",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lobby ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ChatMessage"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/lobbies/{id}/members": {
            "get": {
                "description": "get members of a specific lobby by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "member"
                ],
                "summary": "Get members of a lobby",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lobby ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "description": "lets a user join a lobby",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "lobbies"
                ],
                "summary": "Join an existing Lobby",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lobby ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Join Lobby",
                        "name": "lobby",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.joinLobbyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/lobbies/{id}/members/{id2}/messages": {
            "get": {
                "description": "get all new chat messages for this specific member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "member"
                ],
                "summary": "get new messages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lobby ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Member ID",
                        "name": "id2",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ChatMessage"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/lobbies/{id}/members/{id2}/updates": {
            "get": {
                "description": "Get update instructions of a specific member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "member"
                ],
                "summary": "get member update instructions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lobby ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Member ID",
                        "name": "id2",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/lobbies/{id}/name": {
            "get": {
                "description": "return the name of the specified lobby",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "lobbies"
                ],
                "summary": "get lobby name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lobby ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/lobbies/{id}/rolldice": {
            "post": {
                "description": "roll dice and send back integer result in string form",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "lobbies"
                ],
                "summary": "Roll dice post request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lobby ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Roll Dice Request",
                        "name": "lobby",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.rollDiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "main.createLobbyRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "main.joinLobbyRequest": {
            "type": "object",
            "required": [
                "nickname"
            ],
            "properties": {
                "nickname": {
                    "type": "string"
                }
            }
        },
        "main.rollDiceRequest": {
            "type": "object",
            "required": [
                "DiceType",
                "IsPrivateRoll",
                "MemberID",
                "NumberOfRolls"
            ],
            "properties": {
                "DiceType": {
                    "type": "integer"
                },
                "IsPrivateRoll": {
                    "type": "integer"
                },
                "MemberID": {
                    "type": "string"
                },
                "NumberOfRolls": {
                    "type": "integer"
                }
            }
        },
        "models.ChatMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "sender": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
